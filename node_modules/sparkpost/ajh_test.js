// NODE SDK Test Key
// e2e1b620ff9cf2db919d3c40160c4851d445d454


var key = 'a09759fb7b8c81cb8878acb7b1aa8b91ff6a6e2d'
  , SparkPost = require('./lib/sparkpost')
  , sparky = new SparkPost(key)
  , nock = require('nock');

nock('https://api.sparkpost.com')
  .post('/api/v1/transmissions')
  .reply(422);

sparky.transmissions.send({
  transmissionBody: {
    content: {
      //from: 'testing@sparkpostbox.com',
      subject: 'Oh hey!',
      html:'<html><body><h1>Hi John!</h1><p>Jack just shared graph with you</p><p><a href="https://some.url.here/blablabla">View here</a></p></body></html>'
    },
    recipients: [
      {address: 'aydrian@sparkpost.com'}
    ]
  }
}, function(err, res) {
  if (err) {
    console.log('Whoops! Something went wrong');
    console.log(err);
    console.log(res.body)
  } else {
    console.log('Woohoo! You just sent your first mailing!');
  }
});

/*client.relayWebhooks.update(options, function(err, res) {
  if (err) {
    console.log(err);
  } else {
    console.log(res.request);
    console.log(res.body);
  }
});*/

/*client.relayWebhooks.all(function(err, res) {
  if (err) {
    console.log(err);
  } else {
    console.log(res.body);
  }
});
client.templates.all(function(err, res) {
  if (err) {
    console.log(err);
  } else {
    console.log(res.body);
  }
});*/



/*var SparkPost = require('./lib/sparkpost'),
 client = new SparkPost('e2e1b620ff9cf2db919d3c40160c4851d445d454');*/

/*client.sendingDomains.all(function(err, res) {
  if (err) {
    console.log(err);
  } else {
    console.log(res);
    console.log('Congrats you can use our SDK!');
  }
});*/


/**
 * Test Sending Domains
 */
/*
client.sendingDomains.all(function(err, res) {
  if (err) {
    throw err;
  }
  console.log(res.body);
});
*/

/**
 * Test Transmissions
 */

/*var trans = {
  campaign: 'test-campaign',
  substitutionData: {
    name: 'Test Name'
  },
  description: 'test email',
  replyTo: 'hello@aydrian.me',
  trackOpens: true,
  trackClicks: true,
  from: 'Aydrian <hello@aydrian.me>',
  html: '<p>Hello World! Your name is: {{name}}</p>',
  text: 'Hello World!',
  subject: 'Example Email for All Fields',
  to: [
    {
      address: {
        email: 'aydrian@gmail.com'
      }
    }
  ]
};*/
/*
var txBody = {
  "options": {
    "open_tracking": true,
    "click_tracking": true
  },
  "substitution_data": {
    "signature": "Ayrat"
  },
  "recipients": [
    {
      "address": {
        "email": "aydrian@gmail.com"
      }
    }
  ],
  "content": {
    "template_id": "test-template",
    "from": "aydrian@gmail.com"
  }
};

client.transmissions.send({transmissionBody: txBody }, function(err, res) {
  if (err) {
    console.log(err);
    return;
  } else {
    console.log(res.statusCode);
    console.log(res.body);
    console.log('Congrats you can use our SDK!');
  }
});
/*
var sinon = require('sinon');
var request = require('request');

// initializing sinon fakeServer
var server = sinon.fakeServer.create();
console.log('running');
// fake server answers are queued and not returned automatically unless autoRespond set to true
server.autoRespond = true;
// setting some custom response
server.respondWith("GET", "/some/path/to/data.json",
  [200, { "Content-Type": "application/json" },
    '[{ "id": 12, "comment": "Hey there" }]']);
// make an ajax call

var reqOpts = {
  method: 'GET',
  uri: "/some/path/to/data.json"
};

request(reqOpts, function(error, response, body) {
  if (error) {
    console.log(error + "!!!");
    return;
  }
  console.log('Hurray! Our data has arrived:', body);
});

// rollback default XHR object
server.restore();
*/


